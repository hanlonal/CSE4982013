//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CAPSTONEModel", "BOM_CLIENT_FK", "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CLIENT), "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BOM))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "BOM_CONTACT_FK", "CONTACT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CONTACT), "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BOM))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "BOM_GROUP_FK", "GROUP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.GROUP), "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BOM))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "BOM_INITIATIVE_FK", "INITIATIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.INITIATIVE), "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BOM))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "BUSINESSOB_CATE_FK", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.CATEGORY), "BUSINESSOBJECTIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BUSINESSOBJECTIVE))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.BUSINESSOBJECTIVE), "INITIATIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.INITIATIVE))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "ITCA_BUSINESSOB_FK", "BUSINESSOBJECTIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.BUSINESSOBJECTIVE), "ITCAPOBJMAP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.ITCAPOBJMAP))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CLIE_BUSINESSTY_FK", "BUSINESSTYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.BUSINESSTYPE), "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CLIENT))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CAPABILIT_DOMAI_FK", "DOMAIN", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.DOMAIN), "CAPABILITY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CAPABILITY))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "ITCAPOB_CAPABI_FK", "CAPABILITY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.CAPABILITY), "ITCAPOBJMAP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.ITCAPOBJMAP))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "ITCAPQUE_CAPAB_FK", "CAPABILITY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.CAPABILITY), "ITCAPQUESTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.ITCAPQUESTION))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CLIENT_REGION_FK", "REGION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.REGION), "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CLIENT))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CUPE_CLIENT_FK", "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CLIENT), "CUPE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CUPE))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "GROUP_CLIENT_FK", "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.CLIENT), "GROUP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.GROUP))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "ITCAP_CLIENT_FK", "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CLIENT), "ITCAP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.ITCAP))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "ITCAPOBJM_CLIE_FK", "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.CLIENT), "ITCAPOBJMAP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.ITCAPOBJMAP))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CONTACT_GROUP_FK", "GROUP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.GROUP), "CONTACT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CONTACT))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CUPE_CONTACT_FK", "CONTACT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CONTACT), "CUPE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CUPE))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CUPERESPO_CONT_FK", "CONTACT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.CONTACT), "CUPERESPONSE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CUPERESPONSE))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "ITCAP_CONTACT_FK", "CONTACT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CONTACT), "ITCAP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.ITCAP))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CUPE_CUPEQUESTI_FK", "CUPEQUESTION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.CUPEQUESTION), "CUPE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CUPE))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CUPE_GROUP_FK", "GROUP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.GROUP), "CUPE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CUPE))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "CUPERESPON_CUPE_FK", "CUPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CUPE), "CUPERESPONSE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CUPERESPONSE))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "ITCAP_GROUP_FK", "GROUP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.GROUP), "ITCAP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.ITCAP))]
[assembly: EdmRelationshipAttribute("CAPSTONEModel", "ITCA_ITCAPQUEST_FK", "ITCAPQUESTION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IBMConsultantTool.ITCAPQUESTION), "ITCAP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.ITCAP))]

#endregion

namespace IBMConsultantTool
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SAMPLEEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SAMPLEEntities object using the connection string found in the 'SAMPLEEntities' section of the application configuration file.
        /// </summary>
        public SAMPLEEntities() : base("name=SAMPLEEntities", "SAMPLEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SAMPLEEntities object.
        /// </summary>
        public SAMPLEEntities(string connectionString) : base(connectionString, "SAMPLEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SAMPLEEntities object.
        /// </summary>
        public SAMPLEEntities(EntityConnection connection) : base(connection, "SAMPLEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BOM> BOM
        {
            get
            {
                if ((_BOM == null))
                {
                    _BOM = base.CreateObjectSet<BOM>("BOM");
                }
                return _BOM;
            }
        }
        private ObjectSet<BOM> _BOM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BUSINESSOBJECTIVE> BUSINESSOBJECTIVE
        {
            get
            {
                if ((_BUSINESSOBJECTIVE == null))
                {
                    _BUSINESSOBJECTIVE = base.CreateObjectSet<BUSINESSOBJECTIVE>("BUSINESSOBJECTIVE");
                }
                return _BUSINESSOBJECTIVE;
            }
        }
        private ObjectSet<BUSINESSOBJECTIVE> _BUSINESSOBJECTIVE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BUSINESSTYPE> BUSINESSTYPE
        {
            get
            {
                if ((_BUSINESSTYPE == null))
                {
                    _BUSINESSTYPE = base.CreateObjectSet<BUSINESSTYPE>("BUSINESSTYPE");
                }
                return _BUSINESSTYPE;
            }
        }
        private ObjectSet<BUSINESSTYPE> _BUSINESSTYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CAPABILITY> CAPABILITY
        {
            get
            {
                if ((_CAPABILITY == null))
                {
                    _CAPABILITY = base.CreateObjectSet<CAPABILITY>("CAPABILITY");
                }
                return _CAPABILITY;
            }
        }
        private ObjectSet<CAPABILITY> _CAPABILITY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATEGORY> CATEGORY
        {
            get
            {
                if ((_CATEGORY == null))
                {
                    _CATEGORY = base.CreateObjectSet<CATEGORY>("CATEGORY");
                }
                return _CATEGORY;
            }
        }
        private ObjectSet<CATEGORY> _CATEGORY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CLIENT> CLIENT
        {
            get
            {
                if ((_CLIENT == null))
                {
                    _CLIENT = base.CreateObjectSet<CLIENT>("CLIENT");
                }
                return _CLIENT;
            }
        }
        private ObjectSet<CLIENT> _CLIENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CONTACT> CONTACT
        {
            get
            {
                if ((_CONTACT == null))
                {
                    _CONTACT = base.CreateObjectSet<CONTACT>("CONTACT");
                }
                return _CONTACT;
            }
        }
        private ObjectSet<CONTACT> _CONTACT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CUPE> CUPE
        {
            get
            {
                if ((_CUPE == null))
                {
                    _CUPE = base.CreateObjectSet<CUPE>("CUPE");
                }
                return _CUPE;
            }
        }
        private ObjectSet<CUPE> _CUPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CUPEQUESTION> CUPEQUESTION
        {
            get
            {
                if ((_CUPEQUESTION == null))
                {
                    _CUPEQUESTION = base.CreateObjectSet<CUPEQUESTION>("CUPEQUESTION");
                }
                return _CUPEQUESTION;
            }
        }
        private ObjectSet<CUPEQUESTION> _CUPEQUESTION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CUPERESPONSE> CUPERESPONSE
        {
            get
            {
                if ((_CUPERESPONSE == null))
                {
                    _CUPERESPONSE = base.CreateObjectSet<CUPERESPONSE>("CUPERESPONSE");
                }
                return _CUPERESPONSE;
            }
        }
        private ObjectSet<CUPERESPONSE> _CUPERESPONSE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DOMAIN> DOMAIN
        {
            get
            {
                if ((_DOMAIN == null))
                {
                    _DOMAIN = base.CreateObjectSet<DOMAIN>("DOMAIN");
                }
                return _DOMAIN;
            }
        }
        private ObjectSet<DOMAIN> _DOMAIN;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GROUP> GROUP
        {
            get
            {
                if ((_GROUP == null))
                {
                    _GROUP = base.CreateObjectSet<GROUP>("GROUP");
                }
                return _GROUP;
            }
        }
        private ObjectSet<GROUP> _GROUP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INITIATIVE> INITIATIVE
        {
            get
            {
                if ((_INITIATIVE == null))
                {
                    _INITIATIVE = base.CreateObjectSet<INITIATIVE>("INITIATIVE");
                }
                return _INITIATIVE;
            }
        }
        private ObjectSet<INITIATIVE> _INITIATIVE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ITCAP> ITCAP
        {
            get
            {
                if ((_ITCAP == null))
                {
                    _ITCAP = base.CreateObjectSet<ITCAP>("ITCAP");
                }
                return _ITCAP;
            }
        }
        private ObjectSet<ITCAP> _ITCAP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ITCAPOBJMAP> ITCAPOBJMAP
        {
            get
            {
                if ((_ITCAPOBJMAP == null))
                {
                    _ITCAPOBJMAP = base.CreateObjectSet<ITCAPOBJMAP>("ITCAPOBJMAP");
                }
                return _ITCAPOBJMAP;
            }
        }
        private ObjectSet<ITCAPOBJMAP> _ITCAPOBJMAP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ITCAPQUESTION> ITCAPQUESTION
        {
            get
            {
                if ((_ITCAPQUESTION == null))
                {
                    _ITCAPQUESTION = base.CreateObjectSet<ITCAPQUESTION>("ITCAPQUESTION");
                }
                return _ITCAPQUESTION;
            }
        }
        private ObjectSet<ITCAPQUESTION> _ITCAPQUESTION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REGION> REGION
        {
            get
            {
                if ((_REGION == null))
                {
                    _REGION = base.CreateObjectSet<REGION>("REGION");
                }
                return _REGION;
            }
        }
        private ObjectSet<REGION> _REGION;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BOM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBOM(BOM bOM)
        {
            base.AddObject("BOM", bOM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BUSINESSOBJECTIVE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBUSINESSOBJECTIVE(BUSINESSOBJECTIVE bUSINESSOBJECTIVE)
        {
            base.AddObject("BUSINESSOBJECTIVE", bUSINESSOBJECTIVE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BUSINESSTYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBUSINESSTYPE(BUSINESSTYPE bUSINESSTYPE)
        {
            base.AddObject("BUSINESSTYPE", bUSINESSTYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CAPABILITY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCAPABILITY(CAPABILITY cAPABILITY)
        {
            base.AddObject("CAPABILITY", cAPABILITY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATEGORY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATEGORY(CATEGORY cATEGORY)
        {
            base.AddObject("CATEGORY", cATEGORY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CLIENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCLIENT(CLIENT cLIENT)
        {
            base.AddObject("CLIENT", cLIENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CONTACT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCONTACT(CONTACT cONTACT)
        {
            base.AddObject("CONTACT", cONTACT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CUPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCUPE(CUPE cUPE)
        {
            base.AddObject("CUPE", cUPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CUPEQUESTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCUPEQUESTION(CUPEQUESTION cUPEQUESTION)
        {
            base.AddObject("CUPEQUESTION", cUPEQUESTION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CUPERESPONSE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCUPERESPONSE(CUPERESPONSE cUPERESPONSE)
        {
            base.AddObject("CUPERESPONSE", cUPERESPONSE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DOMAIN EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDOMAIN(DOMAIN dOMAIN)
        {
            base.AddObject("DOMAIN", dOMAIN);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GROUP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGROUP(GROUP gROUP)
        {
            base.AddObject("GROUP", gROUP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INITIATIVE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINITIATIVE(INITIATIVE iNITIATIVE)
        {
            base.AddObject("INITIATIVE", iNITIATIVE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ITCAP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToITCAP(ITCAP iTCAP)
        {
            base.AddObject("ITCAP", iTCAP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ITCAPOBJMAP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToITCAPOBJMAP(ITCAPOBJMAP iTCAPOBJMAP)
        {
            base.AddObject("ITCAPOBJMAP", iTCAPOBJMAP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ITCAPQUESTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToITCAPQUESTION(ITCAPQUESTION iTCAPQUESTION)
        {
            base.AddObject("ITCAPQUESTION", iTCAPQUESTION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REGION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREGION(REGION rEGION)
        {
            base.AddObject("REGION", rEGION);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="BOM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BOM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BOM object.
        /// </summary>
        /// <param name="bOMID">Initial value of the BOMID property.</param>
        public static BOM CreateBOM(global::System.Int32 bOMID)
        {
            BOM bOM = new BOM();
            bOM.BOMID = bOMID;
            return bOM;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> EFFECTIVENESS
        {
            get
            {
                return _EFFECTIVENESS;
            }
            set
            {
                OnEFFECTIVENESSChanging(value);
                ReportPropertyChanging("EFFECTIVENESS");
                _EFFECTIVENESS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EFFECTIVENESS");
                OnEFFECTIVENESSChanged();
            }
        }
        private Nullable<global::System.Single> _EFFECTIVENESS;
        partial void OnEFFECTIVENESSChanging(Nullable<global::System.Single> value);
        partial void OnEFFECTIVENESSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CRITICALITY
        {
            get
            {
                return _CRITICALITY;
            }
            set
            {
                OnCRITICALITYChanging(value);
                ReportPropertyChanging("CRITICALITY");
                _CRITICALITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CRITICALITY");
                OnCRITICALITYChanged();
            }
        }
        private Nullable<global::System.Single> _CRITICALITY;
        partial void OnCRITICALITYChanging(Nullable<global::System.Single> value);
        partial void OnCRITICALITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DIFFERENTIAL
        {
            get
            {
                return _DIFFERENTIAL;
            }
            set
            {
                OnDIFFERENTIALChanging(value);
                ReportPropertyChanging("DIFFERENTIAL");
                _DIFFERENTIAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DIFFERENTIAL");
                OnDIFFERENTIALChanged();
            }
        }
        private Nullable<global::System.Single> _DIFFERENTIAL;
        partial void OnDIFFERENTIALChanging(Nullable<global::System.Single> value);
        partial void OnDIFFERENTIALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BOMID
        {
            get
            {
                return _BOMID;
            }
            set
            {
                if (_BOMID != value)
                {
                    OnBOMIDChanging(value);
                    ReportPropertyChanging("BOMID");
                    _BOMID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BOMID");
                    OnBOMIDChanged();
                }
            }
        }
        private global::System.Int32 _BOMID;
        partial void OnBOMIDChanging(global::System.Int32 value);
        partial void OnBOMIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BOM_CLIENT_FK", "CLIENT")]
        public CLIENT CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.BOM_CLIENT_FK", "CLIENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.BOM_CLIENT_FK", "CLIENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CLIENT> CLIENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.BOM_CLIENT_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CLIENT>("CAPSTONEModel.BOM_CLIENT_FK", "CLIENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BOM_CONTACT_FK", "CONTACT")]
        public CONTACT CONTACT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.BOM_CONTACT_FK", "CONTACT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.BOM_CONTACT_FK", "CONTACT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CONTACT> CONTACTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.BOM_CONTACT_FK", "CONTACT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CONTACT>("CAPSTONEModel.BOM_CONTACT_FK", "CONTACT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BOM_GROUP_FK", "GROUP")]
        public GROUP GROUP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.BOM_GROUP_FK", "GROUP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.BOM_GROUP_FK", "GROUP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GROUP> GROUPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.BOM_GROUP_FK", "GROUP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GROUP>("CAPSTONEModel.BOM_GROUP_FK", "GROUP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BOM_INITIATIVE_FK", "INITIATIVE")]
        public INITIATIVE INITIATIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INITIATIVE>("CAPSTONEModel.BOM_INITIATIVE_FK", "INITIATIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INITIATIVE>("CAPSTONEModel.BOM_INITIATIVE_FK", "INITIATIVE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<INITIATIVE> INITIATIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INITIATIVE>("CAPSTONEModel.BOM_INITIATIVE_FK", "INITIATIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<INITIATIVE>("CAPSTONEModel.BOM_INITIATIVE_FK", "INITIATIVE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="BUSINESSOBJECTIVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BUSINESSOBJECTIVE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BUSINESSOBJECTIVE object.
        /// </summary>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="bUSINESSOBJECTIVEID">Initial value of the BUSINESSOBJECTIVEID property.</param>
        public static BUSINESSOBJECTIVE CreateBUSINESSOBJECTIVE(global::System.String nAME, global::System.Int32 bUSINESSOBJECTIVEID)
        {
            BUSINESSOBJECTIVE bUSINESSOBJECTIVE = new BUSINESSOBJECTIVE();
            bUSINESSOBJECTIVE.NAME = nAME;
            bUSINESSOBJECTIVE.BUSINESSOBJECTIVEID = bUSINESSOBJECTIVEID;
            return bUSINESSOBJECTIVE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BUSINESSOBJECTIVEID
        {
            get
            {
                return _BUSINESSOBJECTIVEID;
            }
            set
            {
                if (_BUSINESSOBJECTIVEID != value)
                {
                    OnBUSINESSOBJECTIVEIDChanging(value);
                    ReportPropertyChanging("BUSINESSOBJECTIVEID");
                    _BUSINESSOBJECTIVEID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BUSINESSOBJECTIVEID");
                    OnBUSINESSOBJECTIVEIDChanged();
                }
            }
        }
        private global::System.Int32 _BUSINESSOBJECTIVEID;
        partial void OnBUSINESSOBJECTIVEIDChanging(global::System.Int32 value);
        partial void OnBUSINESSOBJECTIVEIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BUSINESSOB_CATE_FK", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("CAPSTONEModel.BUSINESSOB_CATE_FK", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("CAPSTONEModel.BUSINESSOB_CATE_FK", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("CAPSTONEModel.BUSINESSOB_CATE_FK", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("CAPSTONEModel.BUSINESSOB_CATE_FK", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "INIT_BUSINESSOB_FK", "INITIATIVE")]
        public EntityCollection<INITIATIVE> INITIATIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INITIATIVE>("CAPSTONEModel.INIT_BUSINESSOB_FK", "INITIATIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INITIATIVE>("CAPSTONEModel.INIT_BUSINESSOB_FK", "INITIATIVE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCA_BUSINESSOB_FK", "ITCAPOBJMAP")]
        public EntityCollection<ITCAPOBJMAP> ITCAPOBJMAP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITCAPOBJMAP>("CAPSTONEModel.ITCA_BUSINESSOB_FK", "ITCAPOBJMAP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITCAPOBJMAP>("CAPSTONEModel.ITCA_BUSINESSOB_FK", "ITCAPOBJMAP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="BUSINESSTYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BUSINESSTYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BUSINESSTYPE object.
        /// </summary>
        /// <param name="bUSINESSTYPEID">Initial value of the BUSINESSTYPEID property.</param>
        public static BUSINESSTYPE CreateBUSINESSTYPE(global::System.Int32 bUSINESSTYPEID)
        {
            BUSINESSTYPE bUSINESSTYPE = new BUSINESSTYPE();
            bUSINESSTYPE.BUSINESSTYPEID = bUSINESSTYPEID;
            return bUSINESSTYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BUSINESSTYPEID
        {
            get
            {
                return _BUSINESSTYPEID;
            }
            set
            {
                if (_BUSINESSTYPEID != value)
                {
                    OnBUSINESSTYPEIDChanging(value);
                    ReportPropertyChanging("BUSINESSTYPEID");
                    _BUSINESSTYPEID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BUSINESSTYPEID");
                    OnBUSINESSTYPEIDChanged();
                }
            }
        }
        private global::System.Int32 _BUSINESSTYPEID;
        partial void OnBUSINESSTYPEIDChanging(global::System.Int32 value);
        partial void OnBUSINESSTYPEIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CLIE_BUSINESSTY_FK", "CLIENT")]
        public EntityCollection<CLIENT> CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CLIENT>("CAPSTONEModel.CLIE_BUSINESSTY_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CLIENT>("CAPSTONEModel.CLIE_BUSINESSTY_FK", "CLIENT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="CAPABILITY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CAPABILITY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CAPABILITY object.
        /// </summary>
        /// <param name="cAPABILITYID">Initial value of the CAPABILITYID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static CAPABILITY CreateCAPABILITY(global::System.Int32 cAPABILITYID, global::System.String nAME)
        {
            CAPABILITY cAPABILITY = new CAPABILITY();
            cAPABILITY.CAPABILITYID = cAPABILITYID;
            cAPABILITY.NAME = nAME;
            return cAPABILITY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CAPABILITYID
        {
            get
            {
                return _CAPABILITYID;
            }
            set
            {
                if (_CAPABILITYID != value)
                {
                    OnCAPABILITYIDChanging(value);
                    ReportPropertyChanging("CAPABILITYID");
                    _CAPABILITYID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CAPABILITYID");
                    OnCAPABILITYIDChanged();
                }
            }
        }
        private global::System.Int32 _CAPABILITYID;
        partial void OnCAPABILITYIDChanging(global::System.Int32 value);
        partial void OnCAPABILITYIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEFAULT
        {
            get
            {
                return _DEFAULT;
            }
            set
            {
                OnDEFAULTChanging(value);
                ReportPropertyChanging("DEFAULT");
                _DEFAULT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEFAULT");
                OnDEFAULTChanged();
            }
        }
        private global::System.String _DEFAULT;
        partial void OnDEFAULTChanging(global::System.String value);
        partial void OnDEFAULTChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CAPABILIT_DOMAI_FK", "DOMAIN")]
        public DOMAIN DOMAIN
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DOMAIN>("CAPSTONEModel.CAPABILIT_DOMAI_FK", "DOMAIN").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DOMAIN>("CAPSTONEModel.CAPABILIT_DOMAI_FK", "DOMAIN").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DOMAIN> DOMAINReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DOMAIN>("CAPSTONEModel.CAPABILIT_DOMAI_FK", "DOMAIN");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DOMAIN>("CAPSTONEModel.CAPABILIT_DOMAI_FK", "DOMAIN", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAPOB_CAPABI_FK", "ITCAPOBJMAP")]
        public EntityCollection<ITCAPOBJMAP> ITCAPOBJMAP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITCAPOBJMAP>("CAPSTONEModel.ITCAPOB_CAPABI_FK", "ITCAPOBJMAP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITCAPOBJMAP>("CAPSTONEModel.ITCAPOB_CAPABI_FK", "ITCAPOBJMAP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAPQUE_CAPAB_FK", "ITCAPQUESTION")]
        public EntityCollection<ITCAPQUESTION> ITCAPQUESTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITCAPQUESTION>("CAPSTONEModel.ITCAPQUE_CAPAB_FK", "ITCAPQUESTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITCAPQUESTION>("CAPSTONEModel.ITCAPQUE_CAPAB_FK", "ITCAPQUESTION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="CATEGORY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATEGORY object.
        /// </summary>
        /// <param name="cATEGORYID">Initial value of the CATEGORYID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static CATEGORY CreateCATEGORY(global::System.Int32 cATEGORYID, global::System.String nAME)
        {
            CATEGORY cATEGORY = new CATEGORY();
            cATEGORY.CATEGORYID = cATEGORYID;
            cATEGORY.NAME = nAME;
            return cATEGORY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORYID
        {
            get
            {
                return _CATEGORYID;
            }
            set
            {
                if (_CATEGORYID != value)
                {
                    OnCATEGORYIDChanging(value);
                    ReportPropertyChanging("CATEGORYID");
                    _CATEGORYID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORYID");
                    OnCATEGORYIDChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORYID;
        partial void OnCATEGORYIDChanging(global::System.Int32 value);
        partial void OnCATEGORYIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BUSINESSOB_CATE_FK", "BUSINESSOBJECTIVE")]
        public EntityCollection<BUSINESSOBJECTIVE> BUSINESSOBJECTIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BUSINESSOBJECTIVE>("CAPSTONEModel.BUSINESSOB_CATE_FK", "BUSINESSOBJECTIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BUSINESSOBJECTIVE>("CAPSTONEModel.BUSINESSOB_CATE_FK", "BUSINESSOBJECTIVE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="CLIENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CLIENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CLIENT object.
        /// </summary>
        /// <param name="cLIENTID">Initial value of the CLIENTID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="lOCATION">Initial value of the LOCATION property.</param>
        /// <param name="sTARTDATE">Initial value of the STARTDATE property.</param>
        /// <param name="bOMCOMPLETE">Initial value of the BOMCOMPLETE property.</param>
        /// <param name="cUPECOMPLETE">Initial value of the CUPECOMPLETE property.</param>
        /// <param name="iTCAPCOMPLETE">Initial value of the ITCAPCOMPLETE property.</param>
        public static CLIENT CreateCLIENT(global::System.Int32 cLIENTID, global::System.String nAME, global::System.String lOCATION, global::System.DateTime sTARTDATE, global::System.String bOMCOMPLETE, global::System.String cUPECOMPLETE, global::System.String iTCAPCOMPLETE)
        {
            CLIENT cLIENT = new CLIENT();
            cLIENT.CLIENTID = cLIENTID;
            cLIENT.NAME = nAME;
            cLIENT.LOCATION = lOCATION;
            cLIENT.STARTDATE = sTARTDATE;
            cLIENT.BOMCOMPLETE = bOMCOMPLETE;
            cLIENT.CUPECOMPLETE = cUPECOMPLETE;
            cLIENT.ITCAPCOMPLETE = iTCAPCOMPLETE;
            return cLIENT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLIENTID
        {
            get
            {
                return _CLIENTID;
            }
            set
            {
                if (_CLIENTID != value)
                {
                    OnCLIENTIDChanging(value);
                    ReportPropertyChanging("CLIENTID");
                    _CLIENTID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLIENTID");
                    OnCLIENTIDChanged();
                }
            }
        }
        private global::System.Int32 _CLIENTID;
        partial void OnCLIENTIDChanging(global::System.Int32 value);
        partial void OnCLIENTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LOCATION
        {
            get
            {
                return _LOCATION;
            }
            set
            {
                OnLOCATIONChanging(value);
                ReportPropertyChanging("LOCATION");
                _LOCATION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LOCATION");
                OnLOCATIONChanged();
            }
        }
        private global::System.String _LOCATION;
        partial void OnLOCATIONChanging(global::System.String value);
        partial void OnLOCATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime STARTDATE
        {
            get
            {
                return _STARTDATE;
            }
            set
            {
                OnSTARTDATEChanging(value);
                ReportPropertyChanging("STARTDATE");
                _STARTDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STARTDATE");
                OnSTARTDATEChanged();
            }
        }
        private global::System.DateTime _STARTDATE;
        partial void OnSTARTDATEChanging(global::System.DateTime value);
        partial void OnSTARTDATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BOMCOMPLETE
        {
            get
            {
                return _BOMCOMPLETE;
            }
            set
            {
                OnBOMCOMPLETEChanging(value);
                ReportPropertyChanging("BOMCOMPLETE");
                _BOMCOMPLETE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BOMCOMPLETE");
                OnBOMCOMPLETEChanged();
            }
        }
        private global::System.String _BOMCOMPLETE;
        partial void OnBOMCOMPLETEChanging(global::System.String value);
        partial void OnBOMCOMPLETEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CUPECOMPLETE
        {
            get
            {
                return _CUPECOMPLETE;
            }
            set
            {
                OnCUPECOMPLETEChanging(value);
                ReportPropertyChanging("CUPECOMPLETE");
                _CUPECOMPLETE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CUPECOMPLETE");
                OnCUPECOMPLETEChanged();
            }
        }
        private global::System.String _CUPECOMPLETE;
        partial void OnCUPECOMPLETEChanging(global::System.String value);
        partial void OnCUPECOMPLETEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ITCAPCOMPLETE
        {
            get
            {
                return _ITCAPCOMPLETE;
            }
            set
            {
                OnITCAPCOMPLETEChanging(value);
                ReportPropertyChanging("ITCAPCOMPLETE");
                _ITCAPCOMPLETE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ITCAPCOMPLETE");
                OnITCAPCOMPLETEChanged();
            }
        }
        private global::System.String _ITCAPCOMPLETE;
        partial void OnITCAPCOMPLETEChanging(global::System.String value);
        partial void OnITCAPCOMPLETEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BOM_CLIENT_FK", "BOM")]
        public EntityCollection<BOM> BOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BOM>("CAPSTONEModel.BOM_CLIENT_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BOM>("CAPSTONEModel.BOM_CLIENT_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CLIE_BUSINESSTY_FK", "BUSINESSTYPE")]
        public BUSINESSTYPE BUSINESSTYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSTYPE>("CAPSTONEModel.CLIE_BUSINESSTY_FK", "BUSINESSTYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSTYPE>("CAPSTONEModel.CLIE_BUSINESSTY_FK", "BUSINESSTYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BUSINESSTYPE> BUSINESSTYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSTYPE>("CAPSTONEModel.CLIE_BUSINESSTY_FK", "BUSINESSTYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BUSINESSTYPE>("CAPSTONEModel.CLIE_BUSINESSTY_FK", "BUSINESSTYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CLIENT_REGION_FK", "REGION")]
        public REGION REGION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REGION>("CAPSTONEModel.CLIENT_REGION_FK", "REGION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REGION>("CAPSTONEModel.CLIENT_REGION_FK", "REGION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REGION> REGIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REGION>("CAPSTONEModel.CLIENT_REGION_FK", "REGION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REGION>("CAPSTONEModel.CLIENT_REGION_FK", "REGION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPE_CLIENT_FK", "CUPE")]
        public EntityCollection<CUPE> CUPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CUPE>("CAPSTONEModel.CUPE_CLIENT_FK", "CUPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CUPE>("CAPSTONEModel.CUPE_CLIENT_FK", "CUPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "GROUP_CLIENT_FK", "GROUP")]
        public EntityCollection<GROUP> GROUP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GROUP>("CAPSTONEModel.GROUP_CLIENT_FK", "GROUP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GROUP>("CAPSTONEModel.GROUP_CLIENT_FK", "GROUP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAP_CLIENT_FK", "ITCAP")]
        public EntityCollection<ITCAP> ITCAP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITCAP>("CAPSTONEModel.ITCAP_CLIENT_FK", "ITCAP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITCAP>("CAPSTONEModel.ITCAP_CLIENT_FK", "ITCAP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAPOBJM_CLIE_FK", "ITCAPOBJMAP")]
        public EntityCollection<ITCAPOBJMAP> ITCAPOBJMAP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITCAPOBJMAP>("CAPSTONEModel.ITCAPOBJM_CLIE_FK", "ITCAPOBJMAP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITCAPOBJMAP>("CAPSTONEModel.ITCAPOBJM_CLIE_FK", "ITCAPOBJMAP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="CONTACT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CONTACT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CONTACT object.
        /// </summary>
        /// <param name="cONTACTID">Initial value of the CONTACTID property.</param>
        public static CONTACT CreateCONTACT(global::System.Int32 cONTACTID)
        {
            CONTACT cONTACT = new CONTACT();
            cONTACT.CONTACTID = cONTACTID;
            return cONTACT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CONTACTID
        {
            get
            {
                return _CONTACTID;
            }
            set
            {
                if (_CONTACTID != value)
                {
                    OnCONTACTIDChanging(value);
                    ReportPropertyChanging("CONTACTID");
                    _CONTACTID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CONTACTID");
                    OnCONTACTIDChanged();
                }
            }
        }
        private global::System.Int32 _CONTACTID;
        partial void OnCONTACTIDChanging(global::System.Int32 value);
        partial void OnCONTACTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BOM_CONTACT_FK", "BOM")]
        public EntityCollection<BOM> BOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BOM>("CAPSTONEModel.BOM_CONTACT_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BOM>("CAPSTONEModel.BOM_CONTACT_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CONTACT_GROUP_FK", "GROUP")]
        public GROUP GROUP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.CONTACT_GROUP_FK", "GROUP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.CONTACT_GROUP_FK", "GROUP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GROUP> GROUPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.CONTACT_GROUP_FK", "GROUP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GROUP>("CAPSTONEModel.CONTACT_GROUP_FK", "GROUP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPE_CONTACT_FK", "CUPE")]
        public EntityCollection<CUPE> CUPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CUPE>("CAPSTONEModel.CUPE_CONTACT_FK", "CUPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CUPE>("CAPSTONEModel.CUPE_CONTACT_FK", "CUPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPERESPO_CONT_FK", "CUPERESPONSE")]
        public EntityCollection<CUPERESPONSE> CUPERESPONSE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CUPERESPONSE>("CAPSTONEModel.CUPERESPO_CONT_FK", "CUPERESPONSE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CUPERESPONSE>("CAPSTONEModel.CUPERESPO_CONT_FK", "CUPERESPONSE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAP_CONTACT_FK", "ITCAP")]
        public EntityCollection<ITCAP> ITCAP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITCAP>("CAPSTONEModel.ITCAP_CONTACT_FK", "ITCAP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITCAP>("CAPSTONEModel.ITCAP_CONTACT_FK", "ITCAP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="CUPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CUPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CUPE object.
        /// </summary>
        /// <param name="cUPEID">Initial value of the CUPEID property.</param>
        public static CUPE CreateCUPE(global::System.Int32 cUPEID)
        {
            CUPE cUPE = new CUPE();
            cUPE.CUPEID = cUPEID;
            return cUPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CUPEID
        {
            get
            {
                return _CUPEID;
            }
            set
            {
                if (_CUPEID != value)
                {
                    OnCUPEIDChanging(value);
                    ReportPropertyChanging("CUPEID");
                    _CUPEID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CUPEID");
                    OnCUPEIDChanged();
                }
            }
        }
        private global::System.Int32 _CUPEID;
        partial void OnCUPEIDChanging(global::System.Int32 value);
        partial void OnCUPEIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMMODITY
        {
            get
            {
                return _COMMODITY;
            }
            set
            {
                OnCOMMODITYChanging(value);
                ReportPropertyChanging("COMMODITY");
                _COMMODITY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMMODITY");
                OnCOMMODITYChanged();
            }
        }
        private global::System.String _COMMODITY;
        partial void OnCOMMODITYChanging(global::System.String value);
        partial void OnCOMMODITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UTILITY
        {
            get
            {
                return _UTILITY;
            }
            set
            {
                OnUTILITYChanging(value);
                ReportPropertyChanging("UTILITY");
                _UTILITY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UTILITY");
                OnUTILITYChanged();
            }
        }
        private global::System.String _UTILITY;
        partial void OnUTILITYChanging(global::System.String value);
        partial void OnUTILITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PARTNER
        {
            get
            {
                return _PARTNER;
            }
            set
            {
                OnPARTNERChanging(value);
                ReportPropertyChanging("PARTNER");
                _PARTNER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PARTNER");
                OnPARTNERChanged();
            }
        }
        private global::System.String _PARTNER;
        partial void OnPARTNERChanging(global::System.String value);
        partial void OnPARTNERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ENABLER
        {
            get
            {
                return _ENABLER;
            }
            set
            {
                OnENABLERChanging(value);
                ReportPropertyChanging("ENABLER");
                _ENABLER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ENABLER");
                OnENABLERChanged();
            }
        }
        private global::System.String _ENABLER;
        partial void OnENABLERChanging(global::System.String value);
        partial void OnENABLERChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPE_CLIENT_FK", "CLIENT")]
        public CLIENT CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.CUPE_CLIENT_FK", "CLIENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.CUPE_CLIENT_FK", "CLIENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CLIENT> CLIENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.CUPE_CLIENT_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CLIENT>("CAPSTONEModel.CUPE_CLIENT_FK", "CLIENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPE_CONTACT_FK", "CONTACT")]
        public CONTACT CONTACT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.CUPE_CONTACT_FK", "CONTACT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.CUPE_CONTACT_FK", "CONTACT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CONTACT> CONTACTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.CUPE_CONTACT_FK", "CONTACT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CONTACT>("CAPSTONEModel.CUPE_CONTACT_FK", "CONTACT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPE_CUPEQUESTI_FK", "CUPEQUESTION")]
        public CUPEQUESTION CUPEQUESTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPEQUESTION>("CAPSTONEModel.CUPE_CUPEQUESTI_FK", "CUPEQUESTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPEQUESTION>("CAPSTONEModel.CUPE_CUPEQUESTI_FK", "CUPEQUESTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CUPEQUESTION> CUPEQUESTIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPEQUESTION>("CAPSTONEModel.CUPE_CUPEQUESTI_FK", "CUPEQUESTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CUPEQUESTION>("CAPSTONEModel.CUPE_CUPEQUESTI_FK", "CUPEQUESTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPE_GROUP_FK", "GROUP")]
        public GROUP GROUP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.CUPE_GROUP_FK", "GROUP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.CUPE_GROUP_FK", "GROUP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GROUP> GROUPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.CUPE_GROUP_FK", "GROUP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GROUP>("CAPSTONEModel.CUPE_GROUP_FK", "GROUP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPERESPON_CUPE_FK", "CUPERESPONSE")]
        public EntityCollection<CUPERESPONSE> CUPERESPONSE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CUPERESPONSE>("CAPSTONEModel.CUPERESPON_CUPE_FK", "CUPERESPONSE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CUPERESPONSE>("CAPSTONEModel.CUPERESPON_CUPE_FK", "CUPERESPONSE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="CUPEQUESTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CUPEQUESTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CUPEQUESTION object.
        /// </summary>
        /// <param name="cUPEQUESTIONID">Initial value of the CUPEQUESTIONID property.</param>
        public static CUPEQUESTION CreateCUPEQUESTION(global::System.Int32 cUPEQUESTIONID)
        {
            CUPEQUESTION cUPEQUESTION = new CUPEQUESTION();
            cUPEQUESTION.CUPEQUESTIONID = cUPEQUESTIONID;
            return cUPEQUESTION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CUPEQUESTIONID
        {
            get
            {
                return _CUPEQUESTIONID;
            }
            set
            {
                if (_CUPEQUESTIONID != value)
                {
                    OnCUPEQUESTIONIDChanging(value);
                    ReportPropertyChanging("CUPEQUESTIONID");
                    _CUPEQUESTIONID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CUPEQUESTIONID");
                    OnCUPEQUESTIONIDChanged();
                }
            }
        }
        private global::System.Int32 _CUPEQUESTIONID;
        partial void OnCUPEQUESTIONIDChanging(global::System.Int32 value);
        partial void OnCUPEQUESTIONIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMMODITY
        {
            get
            {
                return _COMMODITY;
            }
            set
            {
                OnCOMMODITYChanging(value);
                ReportPropertyChanging("COMMODITY");
                _COMMODITY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMMODITY");
                OnCOMMODITYChanged();
            }
        }
        private global::System.String _COMMODITY;
        partial void OnCOMMODITYChanging(global::System.String value);
        partial void OnCOMMODITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UTILITY
        {
            get
            {
                return _UTILITY;
            }
            set
            {
                OnUTILITYChanging(value);
                ReportPropertyChanging("UTILITY");
                _UTILITY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UTILITY");
                OnUTILITYChanged();
            }
        }
        private global::System.String _UTILITY;
        partial void OnUTILITYChanging(global::System.String value);
        partial void OnUTILITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PARTNER
        {
            get
            {
                return _PARTNER;
            }
            set
            {
                OnPARTNERChanging(value);
                ReportPropertyChanging("PARTNER");
                _PARTNER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PARTNER");
                OnPARTNERChanged();
            }
        }
        private global::System.String _PARTNER;
        partial void OnPARTNERChanging(global::System.String value);
        partial void OnPARTNERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ENABLER
        {
            get
            {
                return _ENABLER;
            }
            set
            {
                OnENABLERChanging(value);
                ReportPropertyChanging("ENABLER");
                _ENABLER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ENABLER");
                OnENABLERChanged();
            }
        }
        private global::System.String _ENABLER;
        partial void OnENABLERChanging(global::System.String value);
        partial void OnENABLERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INTWENTY
        {
            get
            {
                return _INTWENTY;
            }
            set
            {
                OnINTWENTYChanging(value);
                ReportPropertyChanging("INTWENTY");
                _INTWENTY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INTWENTY");
                OnINTWENTYChanged();
            }
        }
        private global::System.String _INTWENTY;
        partial void OnINTWENTYChanging(global::System.String value);
        partial void OnINTWENTYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INFIFTEEN
        {
            get
            {
                return _INFIFTEEN;
            }
            set
            {
                OnINFIFTEENChanging(value);
                ReportPropertyChanging("INFIFTEEN");
                _INFIFTEEN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INFIFTEEN");
                OnINFIFTEENChanged();
            }
        }
        private global::System.String _INFIFTEEN;
        partial void OnINFIFTEENChanging(global::System.String value);
        partial void OnINFIFTEENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INTEN
        {
            get
            {
                return _INTEN;
            }
            set
            {
                OnINTENChanging(value);
                ReportPropertyChanging("INTEN");
                _INTEN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INTEN");
                OnINTENChanged();
            }
        }
        private global::System.String _INTEN;
        partial void OnINTENChanging(global::System.String value);
        partial void OnINTENChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPE_CUPEQUESTI_FK", "CUPE")]
        public EntityCollection<CUPE> CUPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CUPE>("CAPSTONEModel.CUPE_CUPEQUESTI_FK", "CUPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CUPE>("CAPSTONEModel.CUPE_CUPEQUESTI_FK", "CUPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="CUPERESPONSE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CUPERESPONSE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CUPERESPONSE object.
        /// </summary>
        /// <param name="cUPERESPONSEID">Initial value of the CUPERESPONSEID property.</param>
        public static CUPERESPONSE CreateCUPERESPONSE(global::System.Int32 cUPERESPONSEID)
        {
            CUPERESPONSE cUPERESPONSE = new CUPERESPONSE();
            cUPERESPONSE.CUPERESPONSEID = cUPERESPONSEID;
            return cUPERESPONSE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CUPERESPONSEID
        {
            get
            {
                return _CUPERESPONSEID;
            }
            set
            {
                if (_CUPERESPONSEID != value)
                {
                    OnCUPERESPONSEIDChanging(value);
                    ReportPropertyChanging("CUPERESPONSEID");
                    _CUPERESPONSEID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CUPERESPONSEID");
                    OnCUPERESPONSEIDChanged();
                }
            }
        }
        private global::System.Int32 _CUPERESPONSEID;
        partial void OnCUPERESPONSEIDChanging(global::System.Int32 value);
        partial void OnCUPERESPONSEIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENT
        {
            get
            {
                return _CURRENT;
            }
            set
            {
                OnCURRENTChanging(value);
                ReportPropertyChanging("CURRENT");
                _CURRENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENT");
                OnCURRENTChanged();
            }
        }
        private global::System.String _CURRENT;
        partial void OnCURRENTChanging(global::System.String value);
        partial void OnCURRENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FUTURE
        {
            get
            {
                return _FUTURE;
            }
            set
            {
                OnFUTUREChanging(value);
                ReportPropertyChanging("FUTURE");
                _FUTURE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FUTURE");
                OnFUTUREChanged();
            }
        }
        private global::System.String _FUTURE;
        partial void OnFUTUREChanging(global::System.String value);
        partial void OnFUTUREChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPERESPO_CONT_FK", "CONTACT")]
        public CONTACT CONTACT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.CUPERESPO_CONT_FK", "CONTACT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.CUPERESPO_CONT_FK", "CONTACT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CONTACT> CONTACTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.CUPERESPO_CONT_FK", "CONTACT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CONTACT>("CAPSTONEModel.CUPERESPO_CONT_FK", "CONTACT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPERESPON_CUPE_FK", "CUPE")]
        public CUPE CUPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPE>("CAPSTONEModel.CUPERESPON_CUPE_FK", "CUPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPE>("CAPSTONEModel.CUPERESPON_CUPE_FK", "CUPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CUPE> CUPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPE>("CAPSTONEModel.CUPERESPON_CUPE_FK", "CUPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CUPE>("CAPSTONEModel.CUPERESPON_CUPE_FK", "CUPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="DOMAIN")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DOMAIN : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DOMAIN object.
        /// </summary>
        /// <param name="dOMAINID">Initial value of the DOMAINID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static DOMAIN CreateDOMAIN(global::System.Int32 dOMAINID, global::System.String nAME)
        {
            DOMAIN dOMAIN = new DOMAIN();
            dOMAIN.DOMAINID = dOMAINID;
            dOMAIN.NAME = nAME;
            return dOMAIN;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DOMAINID
        {
            get
            {
                return _DOMAINID;
            }
            set
            {
                if (_DOMAINID != value)
                {
                    OnDOMAINIDChanging(value);
                    ReportPropertyChanging("DOMAINID");
                    _DOMAINID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DOMAINID");
                    OnDOMAINIDChanged();
                }
            }
        }
        private global::System.Int32 _DOMAINID;
        partial void OnDOMAINIDChanging(global::System.Int32 value);
        partial void OnDOMAINIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEFAULT
        {
            get
            {
                return _DEFAULT;
            }
            set
            {
                OnDEFAULTChanging(value);
                ReportPropertyChanging("DEFAULT");
                _DEFAULT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEFAULT");
                OnDEFAULTChanged();
            }
        }
        private global::System.String _DEFAULT;
        partial void OnDEFAULTChanging(global::System.String value);
        partial void OnDEFAULTChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CAPABILIT_DOMAI_FK", "CAPABILITY")]
        public EntityCollection<CAPABILITY> CAPABILITY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CAPABILITY>("CAPSTONEModel.CAPABILIT_DOMAI_FK", "CAPABILITY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CAPABILITY>("CAPSTONEModel.CAPABILIT_DOMAI_FK", "CAPABILITY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="GROUP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GROUP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GROUP object.
        /// </summary>
        /// <param name="gROUPID">Initial value of the GROUPID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static GROUP CreateGROUP(global::System.Int32 gROUPID, global::System.String nAME)
        {
            GROUP gROUP = new GROUP();
            gROUP.GROUPID = gROUPID;
            gROUP.NAME = nAME;
            return gROUP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GROUPID
        {
            get
            {
                return _GROUPID;
            }
            set
            {
                if (_GROUPID != value)
                {
                    OnGROUPIDChanging(value);
                    ReportPropertyChanging("GROUPID");
                    _GROUPID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GROUPID");
                    OnGROUPIDChanged();
                }
            }
        }
        private global::System.Int32 _GROUPID;
        partial void OnGROUPIDChanging(global::System.Int32 value);
        partial void OnGROUPIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BOM_GROUP_FK", "BOM")]
        public EntityCollection<BOM> BOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BOM>("CAPSTONEModel.BOM_GROUP_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BOM>("CAPSTONEModel.BOM_GROUP_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "GROUP_CLIENT_FK", "CLIENT")]
        public CLIENT CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.GROUP_CLIENT_FK", "CLIENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.GROUP_CLIENT_FK", "CLIENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CLIENT> CLIENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.GROUP_CLIENT_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CLIENT>("CAPSTONEModel.GROUP_CLIENT_FK", "CLIENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CONTACT_GROUP_FK", "CONTACT")]
        public EntityCollection<CONTACT> CONTACT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CONTACT>("CAPSTONEModel.CONTACT_GROUP_FK", "CONTACT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CONTACT>("CAPSTONEModel.CONTACT_GROUP_FK", "CONTACT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CUPE_GROUP_FK", "CUPE")]
        public EntityCollection<CUPE> CUPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CUPE>("CAPSTONEModel.CUPE_GROUP_FK", "CUPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CUPE>("CAPSTONEModel.CUPE_GROUP_FK", "CUPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAP_GROUP_FK", "ITCAP")]
        public EntityCollection<ITCAP> ITCAP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITCAP>("CAPSTONEModel.ITCAP_GROUP_FK", "ITCAP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITCAP>("CAPSTONEModel.ITCAP_GROUP_FK", "ITCAP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="INITIATIVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INITIATIVE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INITIATIVE object.
        /// </summary>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="iNITIATIVEID">Initial value of the INITIATIVEID property.</param>
        public static INITIATIVE CreateINITIATIVE(global::System.String nAME, global::System.Int32 iNITIATIVEID)
        {
            INITIATIVE iNITIATIVE = new INITIATIVE();
            iNITIATIVE.NAME = nAME;
            iNITIATIVE.INITIATIVEID = iNITIATIVEID;
            return iNITIATIVE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INITIATIVEID
        {
            get
            {
                return _INITIATIVEID;
            }
            set
            {
                if (_INITIATIVEID != value)
                {
                    OnINITIATIVEIDChanging(value);
                    ReportPropertyChanging("INITIATIVEID");
                    _INITIATIVEID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("INITIATIVEID");
                    OnINITIATIVEIDChanged();
                }
            }
        }
        private global::System.Int32 _INITIATIVEID;
        partial void OnINITIATIVEIDChanging(global::System.Int32 value);
        partial void OnINITIATIVEIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "BOM_INITIATIVE_FK", "BOM")]
        public EntityCollection<BOM> BOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BOM>("CAPSTONEModel.BOM_INITIATIVE_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BOM>("CAPSTONEModel.BOM_INITIATIVE_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE")]
        public BUSINESSOBJECTIVE BUSINESSOBJECTIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("CAPSTONEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("CAPSTONEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BUSINESSOBJECTIVE> BUSINESSOBJECTIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("CAPSTONEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BUSINESSOBJECTIVE>("CAPSTONEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="ITCAP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ITCAP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ITCAP object.
        /// </summary>
        /// <param name="iTCAPID">Initial value of the ITCAPID property.</param>
        public static ITCAP CreateITCAP(global::System.Int32 iTCAPID)
        {
            ITCAP iTCAP = new ITCAP();
            iTCAP.ITCAPID = iTCAPID;
            return iTCAP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ITCAPID
        {
            get
            {
                return _ITCAPID;
            }
            set
            {
                if (_ITCAPID != value)
                {
                    OnITCAPIDChanging(value);
                    ReportPropertyChanging("ITCAPID");
                    _ITCAPID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ITCAPID");
                    OnITCAPIDChanged();
                }
            }
        }
        private global::System.Int32 _ITCAPID;
        partial void OnITCAPIDChanging(global::System.Int32 value);
        partial void OnITCAPIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ASIS
        {
            get
            {
                return _ASIS;
            }
            set
            {
                OnASISChanging(value);
                ReportPropertyChanging("ASIS");
                _ASIS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASIS");
                OnASISChanged();
            }
        }
        private Nullable<global::System.Single> _ASIS;
        partial void OnASISChanging(Nullable<global::System.Single> value);
        partial void OnASISChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> TOBE
        {
            get
            {
                return _TOBE;
            }
            set
            {
                OnTOBEChanging(value);
                ReportPropertyChanging("TOBE");
                _TOBE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOBE");
                OnTOBEChanged();
            }
        }
        private Nullable<global::System.Single> _TOBE;
        partial void OnTOBEChanging(Nullable<global::System.Single> value);
        partial void OnTOBEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMMENT
        {
            get
            {
                return _COMMENT;
            }
            set
            {
                OnCOMMENTChanging(value);
                ReportPropertyChanging("COMMENT");
                _COMMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMMENT");
                OnCOMMENTChanged();
            }
        }
        private global::System.String _COMMENT;
        partial void OnCOMMENTChanging(global::System.String value);
        partial void OnCOMMENTChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAP_CLIENT_FK", "CLIENT")]
        public CLIENT CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.ITCAP_CLIENT_FK", "CLIENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.ITCAP_CLIENT_FK", "CLIENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CLIENT> CLIENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.ITCAP_CLIENT_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CLIENT>("CAPSTONEModel.ITCAP_CLIENT_FK", "CLIENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAP_CONTACT_FK", "CONTACT")]
        public CONTACT CONTACT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.ITCAP_CONTACT_FK", "CONTACT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.ITCAP_CONTACT_FK", "CONTACT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CONTACT> CONTACTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CONTACT>("CAPSTONEModel.ITCAP_CONTACT_FK", "CONTACT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CONTACT>("CAPSTONEModel.ITCAP_CONTACT_FK", "CONTACT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAP_GROUP_FK", "GROUP")]
        public GROUP GROUP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.ITCAP_GROUP_FK", "GROUP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.ITCAP_GROUP_FK", "GROUP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GROUP> GROUPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("CAPSTONEModel.ITCAP_GROUP_FK", "GROUP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GROUP>("CAPSTONEModel.ITCAP_GROUP_FK", "GROUP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCA_ITCAPQUEST_FK", "ITCAPQUESTION")]
        public ITCAPQUESTION ITCAPQUESTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ITCAPQUESTION>("CAPSTONEModel.ITCA_ITCAPQUEST_FK", "ITCAPQUESTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ITCAPQUESTION>("CAPSTONEModel.ITCA_ITCAPQUEST_FK", "ITCAPQUESTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ITCAPQUESTION> ITCAPQUESTIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ITCAPQUESTION>("CAPSTONEModel.ITCA_ITCAPQUEST_FK", "ITCAPQUESTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ITCAPQUESTION>("CAPSTONEModel.ITCA_ITCAPQUEST_FK", "ITCAPQUESTION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="ITCAPOBJMAP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ITCAPOBJMAP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ITCAPOBJMAP object.
        /// </summary>
        /// <param name="sCORE">Initial value of the SCORE property.</param>
        /// <param name="iTCAPOBJMAPID">Initial value of the ITCAPOBJMAPID property.</param>
        public static ITCAPOBJMAP CreateITCAPOBJMAP(global::System.Int32 sCORE, global::System.Int32 iTCAPOBJMAPID)
        {
            ITCAPOBJMAP iTCAPOBJMAP = new ITCAPOBJMAP();
            iTCAPOBJMAP.SCORE = sCORE;
            iTCAPOBJMAP.ITCAPOBJMAPID = iTCAPOBJMAPID;
            return iTCAPOBJMAP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SCORE
        {
            get
            {
                return _SCORE;
            }
            set
            {
                OnSCOREChanging(value);
                ReportPropertyChanging("SCORE");
                _SCORE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SCORE");
                OnSCOREChanged();
            }
        }
        private global::System.Int32 _SCORE;
        partial void OnSCOREChanging(global::System.Int32 value);
        partial void OnSCOREChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ITCAPOBJMAPID
        {
            get
            {
                return _ITCAPOBJMAPID;
            }
            set
            {
                if (_ITCAPOBJMAPID != value)
                {
                    OnITCAPOBJMAPIDChanging(value);
                    ReportPropertyChanging("ITCAPOBJMAPID");
                    _ITCAPOBJMAPID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ITCAPOBJMAPID");
                    OnITCAPOBJMAPIDChanged();
                }
            }
        }
        private global::System.Int32 _ITCAPOBJMAPID;
        partial void OnITCAPOBJMAPIDChanging(global::System.Int32 value);
        partial void OnITCAPOBJMAPIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCA_BUSINESSOB_FK", "BUSINESSOBJECTIVE")]
        public BUSINESSOBJECTIVE BUSINESSOBJECTIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("CAPSTONEModel.ITCA_BUSINESSOB_FK", "BUSINESSOBJECTIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("CAPSTONEModel.ITCA_BUSINESSOB_FK", "BUSINESSOBJECTIVE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BUSINESSOBJECTIVE> BUSINESSOBJECTIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("CAPSTONEModel.ITCA_BUSINESSOB_FK", "BUSINESSOBJECTIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BUSINESSOBJECTIVE>("CAPSTONEModel.ITCA_BUSINESSOB_FK", "BUSINESSOBJECTIVE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAPOB_CAPABI_FK", "CAPABILITY")]
        public CAPABILITY CAPABILITY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CAPABILITY>("CAPSTONEModel.ITCAPOB_CAPABI_FK", "CAPABILITY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CAPABILITY>("CAPSTONEModel.ITCAPOB_CAPABI_FK", "CAPABILITY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CAPABILITY> CAPABILITYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CAPABILITY>("CAPSTONEModel.ITCAPOB_CAPABI_FK", "CAPABILITY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CAPABILITY>("CAPSTONEModel.ITCAPOB_CAPABI_FK", "CAPABILITY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAPOBJM_CLIE_FK", "CLIENT")]
        public CLIENT CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.ITCAPOBJM_CLIE_FK", "CLIENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.ITCAPOBJM_CLIE_FK", "CLIENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CLIENT> CLIENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("CAPSTONEModel.ITCAPOBJM_CLIE_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CLIENT>("CAPSTONEModel.ITCAPOBJM_CLIE_FK", "CLIENT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="ITCAPQUESTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ITCAPQUESTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ITCAPQUESTION object.
        /// </summary>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="iTCAPQUESTIONID">Initial value of the ITCAPQUESTIONID property.</param>
        /// <param name="dEFAULT">Initial value of the DEFAULT property.</param>
        public static ITCAPQUESTION CreateITCAPQUESTION(global::System.String nAME, global::System.Int32 iTCAPQUESTIONID, global::System.String dEFAULT)
        {
            ITCAPQUESTION iTCAPQUESTION = new ITCAPQUESTION();
            iTCAPQUESTION.NAME = nAME;
            iTCAPQUESTION.ITCAPQUESTIONID = iTCAPQUESTIONID;
            iTCAPQUESTION.DEFAULT = dEFAULT;
            return iTCAPQUESTION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ITCAPQUESTIONID
        {
            get
            {
                return _ITCAPQUESTIONID;
            }
            set
            {
                if (_ITCAPQUESTIONID != value)
                {
                    OnITCAPQUESTIONIDChanging(value);
                    ReportPropertyChanging("ITCAPQUESTIONID");
                    _ITCAPQUESTIONID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ITCAPQUESTIONID");
                    OnITCAPQUESTIONIDChanged();
                }
            }
        }
        private global::System.Int32 _ITCAPQUESTIONID;
        partial void OnITCAPQUESTIONIDChanging(global::System.Int32 value);
        partial void OnITCAPQUESTIONIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DEFAULT
        {
            get
            {
                return _DEFAULT;
            }
            set
            {
                OnDEFAULTChanging(value);
                ReportPropertyChanging("DEFAULT");
                _DEFAULT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DEFAULT");
                OnDEFAULTChanged();
            }
        }
        private global::System.String _DEFAULT;
        partial void OnDEFAULTChanging(global::System.String value);
        partial void OnDEFAULTChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCAPQUE_CAPAB_FK", "CAPABILITY")]
        public CAPABILITY CAPABILITY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CAPABILITY>("CAPSTONEModel.ITCAPQUE_CAPAB_FK", "CAPABILITY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CAPABILITY>("CAPSTONEModel.ITCAPQUE_CAPAB_FK", "CAPABILITY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CAPABILITY> CAPABILITYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CAPABILITY>("CAPSTONEModel.ITCAPQUE_CAPAB_FK", "CAPABILITY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CAPABILITY>("CAPSTONEModel.ITCAPQUE_CAPAB_FK", "CAPABILITY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "ITCA_ITCAPQUEST_FK", "ITCAP")]
        public EntityCollection<ITCAP> ITCAP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITCAP>("CAPSTONEModel.ITCA_ITCAPQUEST_FK", "ITCAP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITCAP>("CAPSTONEModel.ITCA_ITCAPQUEST_FK", "ITCAP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CAPSTONEModel", Name="REGION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REGION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REGION object.
        /// </summary>
        /// <param name="rEGIONID">Initial value of the REGIONID property.</param>
        public static REGION CreateREGION(global::System.Int32 rEGIONID)
        {
            REGION rEGION = new REGION();
            rEGION.REGIONID = rEGIONID;
            return rEGION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 REGIONID
        {
            get
            {
                return _REGIONID;
            }
            set
            {
                if (_REGIONID != value)
                {
                    OnREGIONIDChanging(value);
                    ReportPropertyChanging("REGIONID");
                    _REGIONID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("REGIONID");
                    OnREGIONIDChanged();
                }
            }
        }
        private global::System.Int32 _REGIONID;
        partial void OnREGIONIDChanging(global::System.Int32 value);
        partial void OnREGIONIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CAPSTONEModel", "CLIENT_REGION_FK", "CLIENT")]
        public EntityCollection<CLIENT> CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CLIENT>("CAPSTONEModel.CLIENT_REGION_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CLIENT>("CAPSTONEModel.CLIENT_REGION_FK", "CLIENT", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
